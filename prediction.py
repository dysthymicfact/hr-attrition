# -*- coding: utf-8 -*-
"""prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fCVPEgi9nL9Qk44y8oIsdCjiEVLP0QJo
"""

import pandas as pd
import numpy as np
import joblib

# Muat model dan scaler
rf_model = joblib.load('random_forest.pkl')
xgb_model = joblib.load('xgboost.pkl')
loaded_scaler = joblib.load('scaler.pkl')

# Data dummy karyawan dengan risiko tinggi attrition
df_dummy_attrition = pd.DataFrame({
    "DistanceFromHome": [20],
    "NumCompaniesWorked": [3],
    "MonthlyRate": [8000],
    "TotalWorkingYears": [3],
    "Age": [25],
    "JobLevel": [1],
    "OverTime_No": [0],
    "OverTime_Yes": [1],
    "JobRole_Healthcare Representative": [0],
    "JobRole_Human Resources": [0],
    "JobRole_Laboratory Technician": [0],
    "JobRole_Manager": [0],
    "JobRole_Manufacturing Director": [0],
    "JobRole_Research Director": [0],
    "JobRole_Research Scientist": [0],
    "JobRole_Sales Executive": [0],
    "JobRole_Sales Representative": [1],
    "MaritalStatus_Divorced": [0],
    "MaritalStatus_Married": [0],
    "MaritalStatus_Single": [1],
    "BusinessTravel_Non-Travel": [0],
    "BusinessTravel_Travel_Frequently": [1],
    "BusinessTravel_Travel_Rarely": [0]
})

# Normalisasi data dummy dengan scaler
df_dummy_scaled = loaded_scaler.transform(df_dummy_attrition)

# Mapping hasil prediksi
mapping = {0: "Karyawan kemungkinan akan Stay", 1: "Karyawan kemungkinan akan Leave"}

# Prediksi dengan kedua model
rf_proba = rf_model.predict_proba(df_dummy_scaled)[:, 1]  # Probabilitas kelas "Leave" dari RF
xgb_proba = xgb_model.predict_proba(df_dummy_scaled)[:, 1]  # Probabilitas kelas "Leave" dari XGB

# Ensemble dengan average voting
ensemble_proba = (rf_proba + xgb_proba) / 2  # Rata-rata probabilitas dari kedua model
ensemble_pred = [1 if p >= 0.5 else 0 for p in ensemble_proba]  # Prediksi final berdasarkan threshold 0.5

# Tampilkan hasil prediksi
print(f"Prediksi Ensemble: {mapping[ensemble_pred[0]]}")
print(f"Probabilitas Stay: {(1 - ensemble_proba[0]) * 100:.2f}%")
print(f"Probabilitas Leave: {ensemble_proba[0] * 100:.2f}%")